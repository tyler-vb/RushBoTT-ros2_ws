rover_controller:
  drive_joint_names: {
    type: string_array,
    default_value: [],
    description: "Names of the left side wheels' joints",
    validation: {
      not_empty<>: []
    }
  }
  steering_joint_names: {
    type: string_array,
    default_value: [],
    description: "Names of the right side wheels' joints",
    validation: {
      not_empty<>: []
    }
  }
  wheelbase: {
    type: double,
    default_value: 0.0,
    validation: {
      gt<>: [0.0]
    }
  }
  track_width: {
    type: double,
    default_value: 0.0,
    validation: {
      gt<>: [0.0]
    }
  }
  wheel_radius: {
    type: double,
    default_value: 0.0,
    description: "Radius of a wheel, i.e., wheels size, used for transformation of linear velocity into wheel rotations. If this parameter is wrong the robot will move faster or slower then expected.",
    validation: {
      gt<>: [0.0]
    }
  }
  odom_frame_id: {
    type: string,
    default_value: "odom",
    description:  "Name of the frame for odometry. This frame is parent of ``base_frame_id`` when controller publishes odometry.",
  }
  base_frame_id: {
    type: string,
    default_value: "base_link",
    description: "Name of the robot's base frame that is child of the odometry frame.",
  }
  pose_covariance_diagonal: {
    type: double_array,
    default_value: [0.0, 0.0, 0.0, 0.0, 0.0, 0.0],
    description: "Odometry covariance for the encoder output of the robot for the pose. These values should be tuned to your robot's sample odometry data, but these values are a good place to start: ``[0.001, 0.001, 0.001, 0.001, 0.001, 0.01]``.",
  }
  twist_covariance_diagonal: {
    type: double_array,
    default_value: [0.0, 0.0, 0.0, 0.0, 0.0, 0.0],
    description: "Odometry covariance for the encoder output of the robot for the speed. These values should be tuned to your robot's sample odometry data, but these values are a good place to start: ``[0.001, 0.001, 0.001, 0.001, 0.001, 0.01]``.",
  }
  enable_odom_tf: {
    type: bool,
    default_value: true,
    description: "Publish transformation between ``odom_frame_id`` and ``base_frame_id``.",
  }
  cmd_vel_timeout: {
    type: int,
    default_value: 500, # seconds
    description: "Timeout in milliseconds, after which input command on ``cmd_vel`` topic is considered staled.",
  }
  velocity_rolling_window_size: {
    type: int,
    default_value: 10,
    description: "Size of the rolling window for calculation of mean velocity use in odometry.",
  }
  publish_rate: {
    type: double,
    default_value: 50.0, # Hz
    description: "Publishing rate (Hz) of the odometry and TF messages.",
  }
  vel_limit: {
    type: double,
    default_value: .NAN,
  }
  angle_limit: {
        type: double,
        default_value: .NAN,
  }